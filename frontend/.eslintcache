[{"C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\index.js":"1","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\App.js":"2","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\auth.js":"3","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\Header.js":"4","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\Login.js":"5","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\Main.js":"6","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\ImagePopup.js":"7","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\InfoTooltip.js":"8","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\ProtectedRoute.js":"9","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\utils\\token.js":"10","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentUserContext.js":"11","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\Register.js":"12","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\Footer.js":"13","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditProfilePopup.js":"14","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditAvatarPopup.js":"15","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\AddPlacePopup.js":"16","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\DeleteConfirmPopup.js":"17","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\utils\\Api.js":"18","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\FormContent.js":"19","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\Popup.js":"20","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\Card.js":"21","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\hooks\\useValidation.js":"22"},{"size":318,"mtime":1612040642000,"results":"23","hashOfConfig":"24"},{"size":8530,"mtime":1612040642000,"results":"25","hashOfConfig":"24"},{"size":1443,"mtime":1612040642000,"results":"26","hashOfConfig":"24"},{"size":2128,"mtime":1612040642000,"results":"27","hashOfConfig":"24"},{"size":634,"mtime":1612040642000,"results":"28","hashOfConfig":"24"},{"size":1643,"mtime":1612040642000,"results":"29","hashOfConfig":"24"},{"size":497,"mtime":1612040642000,"results":"30","hashOfConfig":"24"},{"size":750,"mtime":1612040642000,"results":"31","hashOfConfig":"24"},{"size":242,"mtime":1612040642000,"results":"32","hashOfConfig":"24"},{"size":235,"mtime":1612040642000,"results":"33","hashOfConfig":"24"},{"size":85,"mtime":1612040642000,"results":"34","hashOfConfig":"24"},{"size":842,"mtime":1612040642000,"results":"35","hashOfConfig":"24"},{"size":237,"mtime":1612040642000,"results":"36","hashOfConfig":"24"},{"size":3023,"mtime":1612040642000,"results":"37","hashOfConfig":"24"},{"size":2421,"mtime":1612040642000,"results":"38","hashOfConfig":"24"},{"size":2704,"mtime":1612040642000,"results":"39","hashOfConfig":"24"},{"size":848,"mtime":1612040642000,"results":"40","hashOfConfig":"24"},{"size":2929,"mtime":1612040642000,"results":"41","hashOfConfig":"24"},{"size":2352,"mtime":1612040642000,"results":"42","hashOfConfig":"24"},{"size":1299,"mtime":1612040642000,"results":"43","hashOfConfig":"24"},{"size":1492,"mtime":1612040642000,"results":"44","hashOfConfig":"24"},{"size":1145,"mtime":1612040642000,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"wh8e1m",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\index.js",[],["97","98"],"C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\App.js",["99"],"import React from 'react';\nimport Header from \"./Header\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport DeleteConfirmPopup from \"./DeleteConfirmPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { getToken, removeToken, setToken } from \"../utils/token\";\nimport { Redirect, Route, Switch, useHistory } from 'react-router-dom';\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport * as auth from '../auth.js';\n\nconst App = () => {\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isDeletePopupOpen, setDeletePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState([]);\n  const [cards, setCards] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const [isTooltipPopupOpen, setTooltipPopupOpen] = React.useState(false);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [isRegister, setIsRegister] = React.useState(false);\n  const [email, setEmail] = React.useState('');\n  const history = useHistory();\n\n  const handleContentGetter = (token) => {\n    return auth.getContent(token)\n      .then((res) => {\n        setEmail(res.email);\n        setLoggedIn(true);\n        history.push('/');\n      })\n  }\n\n  const tokenCheck = () => {\n    const jwt = getToken();\n    if (!jwt) {\n      return;\n    }\n    handleContentGetter(jwt)\n      .catch((err) => {\n        if (err === 401) {\n          console.log('Произошла ошибка, токен не был передан, был передан не в том формате или не является корректным')\n        }\n      });\n  }\n\n  React.useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  const onLogin = (email, password) => {\n    auth.authorize(email, password)\n      .then((data) => {\n        if (!data) {\n          return\n        }\n        if (data.token) {\n          setToken(data.token);\n          handleContentGetter(data.token)\n        }\n      })\n      .catch((err) => {\n        if (err === 400) {\n          console.log('Произошла ошибка, не передано одно из полей');\n        } else if (err === 401) {\n          console.log('Произошла ошибка, пользователь с данным email не найден');\n        }\n      });\n  }\n\n  const onRegister = (email, password) => {\n    auth.register(email, password)\n      .then((res) => {\n        if (res.statusCode !== 400) {\n          setIsRegister(true);\n          setTooltipPopupOpen(true);\n          history.push('/signin');\n        }\n      })\n      .catch((err) => {\n        setIsRegister(false);\n        setTooltipPopupOpen(true);\n        if (err === 400) {\n          console.log('Произошла ошибка, некорректно заполнено одно из полей')\n        }\n      });\n  }\n\n  const onSignOut = () => {\n    removeToken();\n    setEmail('');\n    setLoggedIn(false);\n    history.push('/signin');\n  }\n\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some(i => i === currentUser._id);\n    const promise = isLiked ? api.dislikeCard(card._id) : api.likeCard(card._id);\n    promise\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(`${err}`);\n      });\n  };\n\n  const handleCardDelete = (card) => {\n    setIsLoading(true)\n    api.deleteCard(card._id)\n      .then(() => {\n        const deleteCards = cards.filter((c) => c._id !== card._id);\n        setCards(deleteCards);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`${err}`);\n      })\n      .finally(() => {\n        setIsLoading(false)\n      })\n  };\n\n  const getUserAndCards = async () => {\n    try {\n      const [userInfo, cards] = await Promise.all([api.getUserInfo(), api.getCards()]);\n      setCards(cards);\n      setCurrentUser(userInfo);\n    } catch (err) {\n      console.log(`${err}`);\n    }\n  };\n\n  React.useEffect(() => {\n    if (!loggedIn) return;\n    getUserAndCards();\n  }, [loggedIn]);\n\n  const handleEditAvatarClick = () => {\n    setEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n\n  const handleDeletePopupOpenClick = (card) => {\n    setDeletePopupOpen(true);\n    setSelectedCard(card);\n  };\n\n  const handleCardClick = (card) => {\n    setImagePopupOpen(true);\n    setSelectedCard(card);\n  };\n\n  const closeAllPopups = () => {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setDeletePopupOpen(false);\n    setSelectedCard(false);\n    setImagePopupOpen(false);\n    setTooltipPopupOpen(false);\n  };\n\n  const handleUpdateUser = (userInfo) => {\n    setIsLoading(true)\n    api.setUserInfo(userInfo)\n      .then((userData) => {\n        setCurrentUser(userData);\n        console.log(userData);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`${err}`);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  };\n\n  const handleUpdateAvatar = (inputValue) => {\n    setIsLoading(true)\n    api.setAvatar(inputValue)\n      .then((avatar) => {\n        setCurrentUser(avatar);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`${err}`);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  };\n\n  const handleAddPlaceSubmit = (inputValue) => {\n    setIsLoading(true)\n    api.createCard(inputValue)\n      .then((newCard) => {\n        setCards([...cards, newCard]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`${err}`);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page__cover\">\n        <Switch>\n          <CurrentUserContext.Provider value={currentUser}>\n            <Header onSignOut={onSignOut} loggedIn={loggedIn} email={email} />\n            <Route path=\"/signin\">\n              <Login onLogin={onLogin} isLoading={isLoading} />\n            </Route>\n            <Route path=\"/signup\">\n              <Register onRegister={onRegister} isLoading={isLoading} />\n            </Route>\n            <ProtectedRoute exact path=\"/\" loggedIn=\"loggedIn\">\n              <Main\n                onEditAvatar={handleEditAvatarClick}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onCardClick={handleCardClick}\n                onCardLike={handleCardLike}\n                onCardDelete={handleDeletePopupOpenClick}\n                cards={cards}\n              />\n              <Footer />\n              <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}\n                onUpdateUser={handleUpdateUser} isLoading={isLoading} />\n\n              <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}\n                onAddPlace={handleAddPlaceSubmit} isLoading={isLoading} />\n\n              <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}\n                onUpdateAvatar={handleUpdateAvatar} isLoading={isLoading} />\n\n              <DeleteConfirmPopup isOpen={isDeletePopupOpen} onClose={closeAllPopups}\n                card={selectedCard} onCardDelete={handleCardDelete} isLoading={isLoading} />\n\n              <ImagePopup isOpen={isImagePopupOpen} onClose={closeAllPopups} card={selectedCard} />\n\n            </ProtectedRoute>\n            <Route>\n              {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/signin\" />}\n            </Route>\n          </CurrentUserContext.Provider>\n        </Switch>\n        <InfoTooltip isRegister={isRegister} isOpen={isTooltipPopupOpen} onClose={closeAllPopups} />\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\auth.js",[],"C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\Header.js",[],"C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\Login.js",[],"C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\Main.js",[],"C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\ImagePopup.js",[],"C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\InfoTooltip.js",[],"C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\utils\\token.js",[],"C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentUserContext.js",[],"C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\Register.js",[],"C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditProfilePopup.js",["100"],"import React from \"react\";\nimport Popup from \"./Popup\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport useValidation from \"../hooks/useValidation\";\n\nconst EditProfilePopup = ({ isOpen, onClose, onUpdateUser, isLoading }) => {\n  const fields = ['name', 'about'];\n\n  const {\n    isValid, setIsValid,\n    inputValue, setInputValue,\n    validationMessage, setValidationMessage,\n    handleInputChange, fieldsEnumeration\n  } = useValidation(fields);\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onUpdateUser({\n      name: inputValue.name,\n      about: inputValue.about,\n    });\n  };\n\n  React.useEffect(() => {\n    setInputValue({\n      name: currentUser.name || '',\n      about: currentUser.about || '',\n    });\n    setIsValid(fieldsEnumeration(true));\n    setValidationMessage(fieldsEnumeration(''));\n  }, [currentUser, isOpen, setInputValue, setIsValid, setValidationMessage]);\n\n  return (\n    <Popup name=\"edit\"\n      isOpen={isOpen}\n      onClose={onClose}>\n      <h2 className=\"popup__title\">Редактировать профиль</h2>\n      <form className={'popup__form form_type_edit'}\n        action=\"#\"\n        name=\"edit\"\n        onSubmit={handleSubmit}\n        noValidate>\n        <div className=\"popup__cover\">\n          <label className=\"popup__control\">\n            <input\n              className={`${validationMessage.name ? `popup__input popup__input_type_name popup__input_type_error` : `popup__input popup__input_type_name`}`}\n              type=\"text\" name=\"name\" value={inputValue.name}\n              onChange={handleInputChange} placeholder=\"Имя\" minLength=\"2\" maxLength=\"20\"\n              pattern=\"^[A-Za-zА-Яа-яЁё\\D][A-Za-zА-Яа-яЁё\\s\\D]*[A-Za-zА-Яа-яЁё\\D]$\" required />\n            <span\n              className={`${isValid.name ? `popup__error` : `popup__error popup__error_type_active`}`}>{validationMessage.name}</span>\n          </label>\n          <label className=\"popup__control\">\n            <input\n              className={`${validationMessage.about ? `popup__input popup__input_type_about popup__input_type_error` : `popup__input popup__input_type_about`}`}\n              type=\"text\" name=\"about\" value={inputValue.about}\n              onChange={handleInputChange} placeholder=\"Занятие\" minLength=\"2\" maxLength=\"200\"\n              pattern=\"^[A-Za-zА-Яа-яЁё\\D][A-Za-zА-Яа-яЁё\\s\\D]*[A-Za-zА-Яа-яЁё\\D]$\" required />\n            <span\n              className={`${isValid.about ? `popup__error` : `popup__error popup__error_type_active`}`}>{validationMessage.about}</span>\n          </label>\n        </div>\n        <input\n          className={`${isValid.name && isValid.about ? `button popup__submit` : `button popup__submit popup__submit_type_disabled`}`}\n          type=\"submit\" value={`${isLoading ? `Сохранение...` : `Сохранить`}`} name=\"submit\" />\n      </form>\n    </Popup>\n  )\n}\n\nexport default EditProfilePopup;","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditAvatarPopup.js",["101"],"import React from \"react\";\nimport Popup from \"./Popup\";\nimport useValidation from \"../hooks/useValidation\";\n\nconst EditAvatarPopup = ({ isOpen, onClose, onUpdateAvatar, isLoading }) => {\n    const fields = ['avatar'];\n\n    const {\n        isValid, setIsValid,\n        inputValue, setInputValue,\n        validationMessage, setValidationMessage,\n        handleInputChange, fieldsEnumeration\n    } = useValidation(fields);\n\n    const avatarInputRef = React.useRef(null);\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        onUpdateAvatar({\n            avatar: avatarInputRef.current.value,\n        });\n    }\n\n    React.useEffect(() => {\n        setInputValue(fieldsEnumeration(''));\n        setIsValid(fieldsEnumeration(false));\n        setValidationMessage(fieldsEnumeration(''));\n    }, [isOpen, setInputValue, setIsValid, setValidationMessage]);\n\n    return (\n        <Popup name=\"avatar\"\n            isOpen={isOpen}\n            onClose={onClose}>\n            <h2 className=\"popup__title\">Обновить аватар</h2>\n            <form className={'popup__form form_type_avatar'}\n                action=\"#\"\n                name=\"avatar\"\n                onSubmit={handleSubmit}\n                noValidate>\n                <div className=\"popup__cover popup__cover_type_avatar\">\n                    <label className=\"popup__control\">\n                        <input ref={avatarInputRef}\n                            className={`${validationMessage.avatar ? `popup__input popup__input_type_avatar popup__input_type_error` : `popup__input popup__input_type_avatar`}`}\n                            type=\"url\" name=\"avatar\" value={inputValue.avatar} placeholder=\"Ссылка на картинку\"\n                            onChange={handleInputChange} required />\n                        <span\n                            className={`${isValid.avatar ? `popup__error` : `popup__error popup__error_type_active`}`}>{validationMessage.avatar}</span>\n                    </label>\n                </div>\n                <input\n                    className={`${isValid.avatar ? `button popup__submit` : `button popup__submit popup__submit_type_disabled`}`}\n                    type=\"submit\"\n                    value={`${isLoading ? `Сохранение...` : `Сохранить`}`}\n                    name=\"submit\" />\n            </form>\n        </Popup>\n    )\n}\n\nexport default EditAvatarPopup;","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\AddPlacePopup.js",["102"],"import React from \"react\";\nimport Popup from \"./Popup\";\nimport useValidation from \"../hooks/useValidation\";\n\nconst AddPlacePopup = ({ isOpen, onClose, onAddPlace, isLoading }) => {\n  const fields = ['name', 'link'];\n\n  const {\n    isValid, setIsValid,\n    inputValue, setInputValue,\n    validationMessage, setValidationMessage,\n    handleInputChange, fieldsEnumeration\n  } = useValidation(fields);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onAddPlace({\n      name: inputValue.name,\n      link: inputValue.link\n    });\n  }\n\n  React.useEffect(() => {\n    setInputValue(fieldsEnumeration(''));\n    setIsValid(fieldsEnumeration(false));\n    setValidationMessage(fieldsEnumeration(''));\n  }, [isOpen, setInputValue, setIsValid, setValidationMessage]);\n\n  return (\n    <Popup\n      name=\"add\"\n      isOpen={isOpen}\n      onClose={onClose}>\n      <h2 className=\"popup__title\">Новое место</h2>\n      <form className={'popup__form form_type_add'}\n        action=\"#\"\n        name=\"add\"\n        onSubmit={handleSubmit}\n        noValidate>\n        <div className=\"popup__cover\">\n          <label className=\"popup__control\">\n            <input\n              className={`${validationMessage.name ? `popup__input popup__input_type_title popup__input_type_error` : `popup__input popup__input_type_title`}`}\n              type=\"text\" name=\"name\" placeholder=\"Название\" minLength=\"1\" maxLength=\"30\"\n              pattern=\"^[A-Za-zА-Яа-яЁё\\D][A-Za-zА-Яа-яЁё\\s\\D]*[A-Za-zА-Яа-яЁё\\D]$\"\n              required value={inputValue.name}\n              onChange={handleInputChange} />\n            <span\n              className={`${isValid.name ? `popup__error` : `popup__error popup__error_type_active`}`}>{validationMessage.name}</span>\n          </label>\n          <label className=\"popup__control\">\n            <input\n              className={`${validationMessage.link ? `popup__input popup__input_type_link popup__input_type_error` : `popup__input popup__input_type_link`}`}\n              type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\" required value={inputValue.link}\n              onChange={handleInputChange} />\n            <span\n              className={`${isValid.link ? `popup__error` : `popup__error popup__error_type_active`}`}>{validationMessage.link}</span>\n          </label>\n        </div>\n        <input\n          className={`${isValid.link && isValid.name ? `button popup__submit` : `button popup__submit popup__submit_type_disabled`}`}\n          type=\"submit\" value={`${isLoading ? `Сохранение...` : `Сохранить`}`}\n          name=\"submit\" />\n      </form>\n    </Popup>\n  )\n}\n\nexport default AddPlacePopup;","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\DeleteConfirmPopup.js",[],"C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\utils\\Api.js",[],"C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\FormContent.js",["103"],"import React from \"react\";\nimport useValidation from \"../hooks/useValidation\";\n\nconst FormContent = ({handleSubmit, formName, submitValue}) => {\n  const fields = ['email', 'password'];\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    handleSubmit({\n      email: inputValue.email,\n      password: inputValue.password,\n    });\n  }\n\n  const {\n    isValid, setIsValid,\n    inputValue, setInputValue,\n    validationMessage, setValidationMessage,\n    handleInputChange, fieldsEnumeration\n  } = useValidation(fields);\n\n  React.useEffect(() => {\n    setInputValue(fieldsEnumeration(''));\n    setIsValid(fieldsEnumeration(false));\n    setValidationMessage(fieldsEnumeration(''));\n  }, [setInputValue, setIsValid, setValidationMessage]);\n\n  return (\n    <form className=\"form_type_register\"\n          action=\"#\"\n          name={formName}\n          onSubmit={onSubmit}\n          noValidate>\n      <div className=\"popup__cover popup__cover_type_register\">\n        <label className=\"popup__control\">\n          <input\n            className={`${validationMessage.email ? `popup__input popup__input_type_email popup__input_type_error` : `popup__input popup__input_type_email`}`}\n            type=\"email\" name=\"email\" value={inputValue.email}\n            onChange={handleInputChange} placeholder=\"Email\" required/>\n          <span\n            className={`${isValid.email ? `popup__error` : `popup__error popup__error_type_active`}`}>{validationMessage.email}</span>\n        </label>\n        <label className=\"popup__control\">\n          <input\n            className={`${validationMessage.password ? `popup__input popup__input_type_password popup__input_type_error` : `popup__input popup__input_type_password`}`}\n            type=\"password\" name=\"password\" value={inputValue.password}\n            onChange={handleInputChange} placeholder=\"Пароль\" required/>\n          <span\n            className={`${isValid.password ? `popup__error` : `popup__error popup__error_type_active`}`}>{validationMessage.password}</span>\n        </label>\n      </div>\n      <input\n        className={`${isValid.email && isValid.password ? `button popup__submit popup__submit_type_white` : `button popup__submit popup__submit_type_white popup__submit_type_disabled`}`}\n        type=\"submit\" value={submitValue} name=\"submit\"/>\n    </form>\n  )\n}\n\nexport default FormContent;","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\Popup.js",["104"],"import React from \"react\";\n\nconst Popup = ({name, isOpen, onClose, children}) => {\n  const handleEscapeClose = (event) => {\n    if (event.key === 'Escape') {\n      onClose();\n    }\n  };\n\n  React.useEffect(() => {\n    document.addEventListener(\"keydown\", handleEscapeClose, false);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleEscapeClose, false);\n    };\n  }, [isOpen]);\n\n  const handleOverlayClose = (event) => {\n    if (event.target === event.currentTarget && isOpen) {\n      onClose();\n    }\n  };\n\n  const handleClassName = (name) => {\n    if (name === \"picture\") {\n      return \"popup__container popup__container_type_picture\";\n    } else if (name === \"info\") {\n      return \"popup__container popup__container_type_info\";\n    } else {\n      return \"popup__container\";\n    }\n  }\n\n  return (\n    <section className={`${isOpen ? `popup popup_type_${name} popup_opened` : `popup popup_type_${name}`}`}\n             onMouseUp={handleOverlayClose}>\n      <div className={handleClassName(name)}>\n        <button className={`${(name === \"info\") ? `button popup__close popup__close_type_info opacity` : `button popup__close opacity`}`}\n                type=\"button\"\n                onClick={onClose}/>\n        {children}\n      </div>\n    </section>\n  );\n}\n\nexport default Popup;","C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\components\\Card.js",[],"C:\\Users\\shults-pavel\\Documents\\dev\\react-mesto-api-full\\frontend\\src\\hooks\\useValidation.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":61,"column":6,"nodeType":"111","endLine":61,"endColumn":8,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":33,"column":6,"nodeType":"111","endLine":33,"endColumn":76,"suggestions":"114"},{"ruleId":"109","severity":1,"message":"113","line":28,"column":8,"nodeType":"111","endLine":28,"endColumn":65,"suggestions":"115"},{"ruleId":"109","severity":1,"message":"113","line":27,"column":6,"nodeType":"111","endLine":27,"endColumn":63,"suggestions":"116"},{"ruleId":"109","severity":1,"message":"113","line":26,"column":6,"nodeType":"111","endLine":26,"endColumn":55,"suggestions":"117"},{"ruleId":"109","severity":1,"message":"118","line":16,"column":6,"nodeType":"111","endLine":16,"endColumn":14,"suggestions":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["122"],"React Hook React.useEffect has a missing dependency: 'fieldsEnumeration'. Either include it or remove the dependency array.",["123"],["124"],["125"],["126"],"React Hook React.useEffect has a missing dependency: 'handleEscapeClose'. Either include it or remove the dependency array.",["127"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"132","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [tokenCheck]",{"range":"139","text":"140"},"Update the dependencies array to be: [currentUser, fieldsEnumeration, isOpen, setInputValue, setIsValid, setValidationMessage]",{"range":"141","text":"142"},"Update the dependencies array to be: [fieldsEnumeration, isOpen, setInputValue, setIsValid, setValidationMessage]",{"range":"143","text":"144"},{"range":"145","text":"144"},"Update the dependencies array to be: [fieldsEnumeration, setInputValue, setIsValid, setValidationMessage]",{"range":"146","text":"147"},"Update the dependencies array to be: [handleEscapeClose, isOpen]",{"range":"148","text":"149"},[2260,2262],"[tokenCheck]",[915,985],"[currentUser, fieldsEnumeration, isOpen, setInputValue, setIsValid, setValidationMessage]",[813,870],"[fieldsEnumeration, isOpen, setInputValue, setIsValid, setValidationMessage]",[714,771],[692,741],"[fieldsEnumeration, setInputValue, setIsValid, setValidationMessage]",[386,394],"[handleEscapeClose, isOpen]"]